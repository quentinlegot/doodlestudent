on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build-front:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Login to registry"
        run: |
          export CR_PAT=$TOKEN
          echo $CR_PAT | docker login -u quentinlegot --password-stdin
        env:
          TOKEN: ${{ secrets.DOCKER_TOKEN }}
      - name: "Compile and push front"
        run: |
          cd front
          docker build -t quentinlegot/tlc-front:latest .
          docker push quentinlegot/tlc-front:latest
  build-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Login to registry"
        run: |
          export CR_PAT=$TOKEN
          echo $CR_PAT | docker login -u quentinlegot --password-stdin
        env:
          TOKEN: ${{ secrets.DOCKER_TOKEN }}
      - name: "Compile and push api"
        run: |
          cd api
          docker build -t quentinlegot/tlc-api:latest .
          docker push quentinlegot/tlc-api:latest
  build-db:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Login to registry"
        run: |
          export CR_PAT=$TOKEN
          echo $CR_PAT | docker login -u quentinlegot --password-stdin
        env:
          TOKEN: ${{ secrets.DOCKER_TOKEN }}
      - name: "Compile and push db"
        run: |
          cd db
          docker build -t quentinlegot/tlc-db:latest .
          docker push quentinlegot/tlc-db:latest
  build-keycloak:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Login to registry"
        run: |
          export CR_PAT=$TOKEN
          echo $CR_PAT | docker login -u quentinlegot --password-stdin
        env:
          TOKEN: ${{ secrets.DOCKER_TOKEN }}
      - name: "Compile and push keycloak"
        run: |
          cd keycloak
          docker build -t quentinlegot/tlc-keycloak:latest .
          docker push quentinlegot/tlc-keycloak:latest


          
      
      
    
